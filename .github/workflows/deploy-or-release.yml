name: Deploy demo app or release ember-widget (Production)

on:
  push:
    branches:
      - staging
  workflow_dispatch:

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  ci:
    uses: ./.github/workflows/ci.yml

  deploy-or-release:
    name: Deploy or Release
    needs: ci
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          publish: pnpm run release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Check for Changesets
        id: check_changesets
        run: |
          if [[ "${{ steps.changesets.outputs.hasChangesets }}" == "false" ]]; then
            echo "No changesets found. Proceeding with deployment."
            echo "DEPLOY=true" >> $GITHUB_OUTPUT
          else
            echo "Changesets found. Skipping deployment."
            echo "DEPLOY=false" >> $GITHUB_OUTPUT
          fi

      - name: Get New Version
        if: steps.check_changesets.outputs.DEPLOY == 'true'
        id: get_version
        run: echo "NEW_VERSION=$(node -p "require('./apps/demo/package.json').version")" >> $GITHUB_OUTPUT

      - name: Set up SSH environment
        if: steps.check_changesets.outputs.DEPLOY == 'true'
        run: |
          mkdir -p ~/.ssh
          echo ${{ secrets.SSH_KEY }} >> ~/.ssh/known_hosts

      - name: Setup SSH private key
        if: steps.check_changesets.outputs.DEPLOY == 'true'
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Set up Docker Buildx
        if: steps.check_changesets.outputs.DEPLOY == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Install Compose
        if: steps.check_changesets.outputs.DEPLOY == 'true'
        uses: ndeloof/install-compose-action@v0.0.1
        with:
          version: v2.21.0

      - name: Deploy containers in server
        if: steps.check_changesets.outputs.DEPLOY == 'true'
        env:
          USE_PUBLISHED_PACKAGES: ${{ env.USE_PUBLISHED_PACKAGES }}
          DOCKER_HOST: ssh://${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }}
          VITE_EMBER_API_KEY: ${{ secrets.EMBER_API_KEY }}
          ENVIRONMENT: production
        run: |
          set -e
          echo "Starting deployment process..."
          docker compose -f apps/demo/docker-compose.yml -p ember-widget-demo-$ENVIRONMENT up -d --build --remove-orphans
          echo "Deployment process completed successfully."

      - name: Check Deployment Status
        if: steps.check_changesets.outputs.DEPLOY == 'true' && failure()
        env:
          ENVIRONMENT: production
        run: |
          echo "Deployment failed. Please check the logs for more information."
          docker compose -f apps/demo/docker-compose.yml -p ember-widget-demo-$ENVIRONMENT logs
          exit 1

      - name: Deployment Skipped
        if: steps.check_changesets.outputs.DEPLOY == 'false'
        run: |
          echo "Deployment skipped for demo app."